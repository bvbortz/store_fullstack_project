version: '3'
services:
  aggregations: 
    image: bvbortz/aggregations:latest
    environment:
      MONGODB_URL: mongodb://mongo:27017/
      PORT: "80"
    depends_on:
      - mongo
  backend: 
    image: bvbortz/backend:latest
    environment:
      MONGODB_URL: mongodb://mongo:27017/
      PORT: "5000"
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin12345
      MINIO_BUCKET: gen-images
      MINIO_API_HOST: minio
      MINIO_PORT: "9000" 
      BASE_URL: "http://localhost"
    depends_on:
      - mongo
      - aggregations
  mongo: 
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGODB_URL: mongodb://mongo:27017/
    volumes:
      - mongo-data:/data/db
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    expose:
      - "80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend
      - producer
      - aggregations
  rabbitmqServer:
    container_name: rabbitmqServer
    image: "rabbitmq:3.6-management-alpine"
    hostname: "rabbitmq-host"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "pass"
  minio:
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin12345
      - MINIO_DEFAULT_BUCKETS=gen-images
  producer:
    image: bvbortz/producer:latest
    container_name: producer
    depends_on:
      - rabbitmqServer
      - backend
    environment:
      RABBITMQ_USERNAME: "admin"
      RABBITMQ_PASSSWORD: "pass"
      RABBITMQ_HOST: rabbitmqServer
      RABBITMQ_QUEUE: dataqueue
      RABBITMQ_ROUTING_KEY: dataqueue 
      RABBITMQ_EXCHANGE: exchange_test
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin12345
      MINIO_BUCKET: gen-images
      MINIO_ENDPOINT: minio:9000
      PORT: "3000"
    restart: always
  receiver:
    image: bvbortz/receiver:latest
    container_name: receiver
    restart: always
    depends_on:
      - rabbitmqServer
    environment:
      RABBITMQ_USERNAME: "admin"
      RABBITMQ_PASSSWORD: "pass"
      RABBITMQ_HOST: rabbitmqServer
      RABBITMQ_QUEUE: dataqueue
      RABBITMQ_ROUTING_KEY: dataqueue 
      RABBITMQ_EXCHANGE: exchange_test
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin12345
      MINIO_BUCKET: gen-images
      MINIO_ENDPOINT: minio:9000
volumes:
  mongo-data:
    driver: local
  minio_data:
    driver: local